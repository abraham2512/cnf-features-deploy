name: 'ðŸ”§ Gemini Create Fix'

on:
  issue_comment:
    types: [created]

concurrency:
  group: '${{ github.workflow }}-${{ github.event.issue.number }}'
  cancel-in-progress: false

defaults:
  run:
    shell: 'bash'

jobs:
  create-fix:
    runs-on: 'ubuntu-latest'
    if: |
      github.event.issue.state == 'open' &&
      contains(github.event.comment.body, '@gemini-cli create-fix')
    permissions:
      contents: 'write'
      id-token: 'write'
      issues: 'write'
      pull-requests: 'write'
    steps:
      - name: 'Mint identity token'
        id: 'mint_identity_token'
        if: |-
          ${{ vars.APP_ID }}
        uses: 'actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b' # ratchet:actions/create-github-app-token@v2
        with:
          app-id: '${{ vars.APP_ID }}'
          private-key: '${{ secrets.APP_PRIVATE_KEY }}'
          permission-contents: 'write'
          permission-issues: 'write'
          permission-pull-requests: 'write'

      - name: 'Checkout repository'
        uses: 'actions/checkout@v4'
        with:
          token: '${{ steps.mint_identity_token.outputs.token || secrets.GITHUB_TOKEN || github.token }}'

      - name: 'Run Gemini CLI - Create Fix'
        id: 'run_gemini_create_fix'
        uses: 'google-github-actions/run-gemini-cli@v0' # ratchet:exclude
        env:
          TITLE: '${{ github.event.issue.title }}'
          DESCRIPTION: '${{ github.event.issue.body }}'
          EVENT_NAME: '${{ github.event_name }}'
          GITHUB_TOKEN: '${{ steps.mint_identity_token.outputs.token || secrets.GITHUB_TOKEN || github.token }}'
          ISSUE_NUMBER: '${{ github.event.issue.number }}'
          REPOSITORY: '${{ github.repository }}'
        with:
          gemini_api_key: '${{ secrets.GEMINI_API_KEY }}'
          gcp_workload_identity_provider: '${{ vars.GCP_WIF_PROVIDER }}'
          gcp_project_id: '${{ vars.GOOGLE_CLOUD_PROJECT }}'
          gcp_location: '${{ vars.GOOGLE_CLOUD_LOCATION }}'
          gcp_service_account: '${{ vars.SERVICE_ACCOUNT_EMAIL }}'
          use_vertex_ai: '${{ vars.GOOGLE_GENAI_USE_VERTEXAI }}'
          google_api_key: '${{ secrets.GOOGLE_API_KEY }}'
          use_gemini_code_assist: '${{ vars.GOOGLE_GENAI_USE_GCA }}'
          gemini_debug: true
          gemini_model: '${{ vars.GEMINI_MODEL }}'
          settings: |-
            {
              "maxSessionTurns": 75,
              "telemetry": {
                "enabled": ${{ vars.GOOGLE_CLOUD_PROJECT != '' }},
                "target": "gcp"
              },
              "coreTools": [
                "run_shell_command(find)",
                "run_shell_command(grep)",
                "run_shell_command(cat)",
                "run_shell_command(head)",
                "run_shell_command(tail)"
              ]
            }
          prompt: |-
            TASK: Add security fix to ztp/resource-generator/Containerfile for issue #${{ env.ISSUE_NUMBER }}.

            REPOSITORY: ${{ env.REPOSITORY }} (owner: abraham2512, repo: cnf-features-deploy)

            Steps:
            1. Use run_shell_command to find the Containerfile: find . -name "Containerfile" -type f
            2. Use run_shell_command to read it: cat ztp/resource-generator/Containerfile
            3. Use run_shell_command to create a branch: git checkout -b cve-fix-${{ env.ISSUE_NUMBER }}
            4. Use run_shell_command to add the fix: echo 'RUN chmod 644 /etc/passwd' >> ztp/resource-generator/Containerfile
            5. Use run_shell_command to commit: git add . && git commit -m "fix: add CVE-2025-7195 security fix"
            6. Use run_shell_command to push: git push origin cve-fix-${{ env.ISSUE_NUMBER }}

            Execute these steps using the available shell commands.